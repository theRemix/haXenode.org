article
  header
    h1 Why use haXe?
    h3 You can create apps using a single unified programming language.
  .content-wrapper
    ul.clearfix
      li
        h2
          | Use existing haXe &amp;
          br 
          | JavaScript code
        hr
        p 
          | You can take advantage of the many other haXe, JavaScript, and node.js libraries such as JQuery, express, &amp; mongo db. including many others from
          a(href="http://lib.haxe.org") haxelib
          | .
      li
        h2
          | JavaScript2 
          br 
          | (ECMA4) features
        hr
        p JavaScript2 promised a lot of great features for the future. HaXe provides a very similar experience now &amp; is fully compatible with current browsers.
      li.third-column
        h2
          | Elegant Remoting
          br 
          | between platforms
        hr
        p Pass objects between different platforms using remoting classes from the same codebase. Successful de-serialization makes remoting between platforms elegant and fast.
      li.second-row
        h2 Benefits type checking
        hr
        p Strict type checking &amp; compile-time checks allows you to catch errors before testing in the browser or vm. This means a faster workflow for dynamically typed targets (like JavaScript).
      li.second-row
        h2 ECMA style programming
        hr
        p ECMA style programming for client-side, server-side &amp; desktop. The haXe syntax is familiar to those coming from ActionScript and JavaScript.
      li.second-row.third-column
        h2 Extremely fast compiling
        hr
        p compile time benchmarks:
        code.code
          span.comment haxenode.org 
          br
          | Total time : 0.197s
          span.comment haxenode.org/javascripts/script.js
          br
          | Total time : 0.109s
