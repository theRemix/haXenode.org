#haxenodexample
  .wrapper.clearfix
    #nodejsexample
      article.nodejscode
        header
          h2 node.js
        .code
          code.comment \// example.js
          br
          code
            | var http = require('http');
            | var server = http.createServer(
            |   function (req, res) {
            |     res.writeHead(200, {'Content-Type': 'text/plain'});
            |     res.end('Hello World\\n');
            |   }
            | )
            | 
            | server.listen(1337, "127.0.0.1");
            | console.log('Server running at http://127.0.0.1:1337/');

      article
        header
          h2 run
        .code
          code.comment # in terminal
          br
          kbd $ node example.js
          br
          samp Server running at http://127.0.0.1:1337/
          
    #haxexample
      article.haxecode
        header
          h2 haxenode
        .code
          code.comment \// Haxenode.hx
          br
          code
            | import js.Node;
            | class Haxenode {
            |   public static function main() {
            |     var server = Node.http.createServer( function(
            |       req:NodeHttpServerReq, res:NodeHttpServerResp){
            |         res.setHeader("Content-Type","text/plain");
            |         res.writeHead(200);
            |         res.end('Hello World\\n');
            |       }
            |     );
            | 
            |     server.listen(1337,"localhost");
            |     trace( 'Server running at http://127.0.0.1:1337/' );
            |   }
            | }

      article
        header.compile-and-run
          h2 compile &amp; run
        .code
          code.comment # in terminal
          br
          kbd $ haxe -lib nodejs -js haxenode.js -main Haxenode
          br
          kbd $ node haxenode.js
          br
          samp Server running at http://127.0.0.1:1337/
#main-content
  div(id="haxe:trace")
  .wrapper
    #whatishaxenode.clearfix
                
    #whyusehaxe
          
    #download
      
    #installation
      